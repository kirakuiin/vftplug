*vim-ftplugin.cnx* A ftplugin collections for programmer            *vftplug*

             _                  __ _         _             _~
      __   _(_)_ __ ___        / _| |_ _ __ | |_   _  __ _(_)_ __~
      \ \ / / | '_ ` _ \ _____| |_| __| '_ \| | | | |/ _` | | '_ \~
       \ V /| | | | | | |_____|  _| |_| |_) | | |_| | (_| | | | | |~
        \_/ |_|_| |_| |_|     |_|  \__| .__/|_|\__,_|\__, |_|_| |_|~
                                    |_|            |___/~

                              Reference Manual~

==============================================================================
内容                                                        *vftplug-content*

    1. 介绍........................................ |vftplug-intro|
    2. 配置........................................ |vftplug-config|
    3. 选项........................................ |vftplug-options|
    4. 命令........................................ |vftplug-commands|
    5. 映射........................................ |vftplug-mappings|

==============================================================================
介绍                                                          *vftplug-intro*

一个包含了多个文件类型插件的集合, 为编程时提供一些方便的操作，比如自动生
成模板文件, 快捷缩写等等.

==============================================================================
配置                                                         *vftplug-config*

------------------------------------------------------------------------------
安装:~

如果使用Vundle进行管理, 在配置文件中加入: >
    Plugin 'kirakuiin/vftplug'
<
之后执行PluginInstall即可, 具体操作细节参考|vundle|

如果使用其他类型的包管理工具, 可同理根据包的命令来安装此插件

==============================================================================
选项                                                        *vftplug-options*

                                                         *'g:loaded_vftplug'*
默认值: 无
使用该选项来屏蔽插件的所有功能: >
    let g:loaded_vftplug = 1
<
                                                     *'vftplug_support_lang'*
默认值: ['vim', 'python']
使用该选项来选择支持那些文件类型的便利功能, 如仅支持python: >
    let g:vftplug_support_lang = ['python']
<
                                                    *'g:vftplug_header_info'*
默认值: {'Author': 'Anonymous', ...}
生成源代码头部注释的基本信息, 包含作者, 版本号, 许可: >
    let g:vftplug_header_info = {
        \'Author': 'dogfight@gmail.com',
        \'License': 'GPL.v3',
        \'Version': '1.0',
        \}
<
==============================================================================
命令                                                       *vftplug-commands*

==============================================================================
映射                                                       *vftplug-mappings*

                                                       <Plug>VftpGeneHeader
根据文件类型生成对应的头部注释, 会生成如下类似的文本:>
    # test.x - test
    # author: aaa.bbb@xxx.com
    # last change: xxxx xx xx
    # license: xxx.vx
<
文本是根据|'g:vftplug_header_info'|所提供的信息生成的, 如果不手动设置生成的
是无意义的默认值。
    默认映射: |<localleader>|gh
    模式: |Normal|

==============================================================================
vim:tw=78:ts=4:ft=help:norl:
